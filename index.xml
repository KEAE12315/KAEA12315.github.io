<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>KEAE的编程笔记</title><link>https://keae12315.github.io/blog/</link><description>Recent content on KEAE的编程笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 05 Aug 2022 03:19:27 +0800</lastBuildDate><atom:link href="https://keae12315.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Ubuntu20安装后配置</title><link>https://keae12315.github.io/blog/post/ubuntu%E5%AE%89%E8%A3%85%E5%90%8E%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE/</link><pubDate>Fri, 05 Aug 2022 03:19:27 +0800</pubDate><guid>https://keae12315.github.io/blog/post/ubuntu%E5%AE%89%E8%A3%85%E5%90%8E%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE/</guid><description>设置Git 本地Git用户邮箱设置 # 查看git配置信息 git config --list # 查看用户名 git config user.name # 查看邮箱 git config user.email # 设置全局用户名 git config --global user.name &amp;quot;xxx&amp;quot;(输入你的用户名) # 设置全局邮箱 git config --global user.email &amp;quot;xxx&amp;quot;(输入你的邮箱) 生成SSH key ssh-keygen -t ed25519 -C &amp;quot;your_email@example.com&amp;quot; 一路回车, 默认生成到~/.ssh目录下.
将后缀为.pub文件的内容添加到GitHub账户里.
换源 Ubuntu 的软件源配置文件是 /etc/apt/sources.list
备份配置文件
sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak 修改文件
sudo vim /etc/apt/sources.list 清华源
# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释 deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse deb https://mirrors.</description></item><item><title>WSL2使用v2ray代理</title><link>https://keae12315.github.io/blog/post/wsl2%E4%BD%BF%E7%94%A8v2ray%E4%BB%A3%E7%90%86/</link><pubDate>Thu, 04 Aug 2022 12:25:49 +0800</pubDate><guid>https://keae12315.github.io/blog/post/wsl2%E4%BD%BF%E7%94%A8v2ray%E4%BB%A3%E7%90%86/</guid><description>主机V2Ray设置 允许局域网连接 获取监听端口 对我而言, 有用的端口是局域网socks:10810
WSL2设置 配置环境变量 修改.bashrc文件, 添加以下内容(记得source .bashrc)
# v2ray proxy export windows_host=`cat /etc/resolv.conf|grep nameserver|awk '{print $2}'` export ALL_PROXY=socks5://$windows_host:10810 export HTTP_PROXY=$ALL_PROXY export http_proxy=$ALL_PROXY export HTTPS_PROXY=$ALL_PROXY export https_proxy=$ALL_PROXY 测试连接情况 curl -vv google.com 参考资料
WSL2中使用windows的代理
记录一次WSL2的网络代理配置</description></item><item><title>Hugo入门</title><link>https://keae12315.github.io/blog/post/hugo%E5%85%A5%E9%97%A8/</link><pubDate>Thu, 04 Aug 2022 00:58:00 +0800</pubDate><guid>https://keae12315.github.io/blog/post/hugo%E5%85%A5%E9%97%A8/</guid><description>安装与配置 主题 安装主题
git submodule add git@github.com:adityatelange/hugo-PaperMod.git themes/hugo-PaperMod 使用主题: 在配置文件config.yaml中使用如下配置项
theme: hugo-PaperMod 基本操作 生成新文章
hugo new post/&amp;lt;filename&amp;gt;.md 为了简化操作, 在.bashrc文件里设置h函数
h(){ hugo new post/$1.md } 部署到GitHub Page 生成token 我自己笔记的源码和github.io的仓库分开, 为了能够获取仓库的读写权限, 需要生成personal token. 并在源码仓库里设置(token的名字要与workflow配置文件里一致).
设置workflow文件 生成.github/workflows/gh-pages.yml文件, 内容如下.
name: GitHub Pages on: push: branches: - main # Set a branch to deploy pull_request: jobs: deploy: runs-on: ubuntu-20.04 concurrency: group: ${{ github.workflow }}-${{ github.ref }} steps: - uses: actions/checkout@v3 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .</description></item></channel></rss>