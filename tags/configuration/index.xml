<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Configuration on KEAE的编程笔记</title>
    <link>https://keae12315.github.io/blog/tags/configuration/</link>
    <description>Recent content in Configuration on KEAE的编程笔记</description>
    <image>
      <url>https://keae12315.github.io/blog/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://keae12315.github.io/blog/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 08 Aug 2022 00:39:12 +0800</lastBuildDate><atom:link href="https://keae12315.github.io/blog/tags/configuration/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>VS Code远程连接</title>
      <link>https://keae12315.github.io/blog/post/vscode%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/</link>
      <pubDate>Mon, 08 Aug 2022 00:39:12 +0800</pubDate>
      
      <guid>https://keae12315.github.io/blog/post/vscode%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/</guid>
      <description>微软针对Vs code的远程开发推出了三个插件，包括 ：
 Remote-SSH：SSH 连接虚拟/实体Linux主机； Remote-Container：连接容器； Remote-WSL：连接WSL（也就是Linux子系统）。 重点服务使用Windows但具有Linux开发需求的用户。  使用Remote-SSH连接实验室服务器 这里是微软关于SSH连接的官方文档
安装Remote-SSH插件 在Extension侧边栏搜索Remote-ssh并安装
修改ssh配置文件 文件位置C:\Users\&amp;lt;user&amp;gt;\.ssh\config，如果没有这个文件夹，在管理可选功能里添加 OpenSSH 客户端。
在config文件中写入以下内容
Host Labserve #填写别名 HostName 1.1.1.1 #填写实验室服务器IP/host User user #填写ssh用户名 添加ssh公钥 远程ssh连接Linux服务器时，需要借助ssh公钥登录.
  生成ssh公钥
在cmd中输入ssh-keygen，一路回车键，完成后在$HOME/.ssh/目录下可以发现两个文件：id_rsa.pub和id_rsa，分别是客户端的公钥和私钥。
  上传ssh公钥
登录远程服务器，创建.ssh目录和authorized_keys文件
mkdir ~/.ssh/ cd ~/.ssh/ vim authorized_keys   修改ssh配置
vim /etc/ssh/sshd_config RSAAuthentication yes PubkeyAuthentication yes AuthorizedKeysFile $h/.ssh/authorized_keys   保存并退出vim。
重启ssh服务 service ssh restart   通过CONNECTION侧边栏进行连接 此时，已经可以在CONNECTION侧边栏看见服务器的别名，点击进行连接。 特别的，如果没有生成ssh公钥，这一步可能会要求输入服务器密码。
问题汇总 阿里云、腾讯云等云服务器连接超时 目前VSCode的远程连接插件，默认勾选Use Local Server，也就是默认使用本地局域网络进行连接。如果你遇到阿里云等云服务器连接超时，应该取消勾选此项。</description>
    </item>
    
    <item>
      <title>Docker教程</title>
      <link>https://keae12315.github.io/blog/post/docker%E6%95%99%E7%A8%8B/</link>
      <pubDate>Mon, 08 Aug 2022 00:29:27 +0800</pubDate>
      
      <guid>https://keae12315.github.io/blog/post/docker%E6%95%99%E7%A8%8B/</guid>
      <description>本文默认环境为Linux，打包镜像以Python为例。
常用操作 查看镜像：docker images 查看所有容器：docker ps -a 查看所有容器ID：docker ps -aq 查看所有正在运行容器：docker ps 停止容器：docker stop 停止所有容器：docker stop $(docker ps -aq) 删除容器：docker rm 删除镜像：docker rmi 删除所有停止的容器：docker container prune -f 删除所有不使用的镜像：docker image prune -f -a 保存镜像：docker save &amp;gt; 加载镜像：docker load &amp;lt; 注意，删除前需要先停止容器。
安装 官方安装教程
 Ubuntu Windows MacOS  配置 官方原文过长，摘取了常用的两个步骤。
配置root用户 Docker绑定到Unix socket，但它需要sudo权限。如果不想每次都加sudo命令，创建一个名为Docker的Unix组.
# 创建docker组。 sudo groupadd docker # 将用户添加到docker组。 sudo usermod -aG docker $USER # 激活对组的更改 newgrp docker 配置开机启动 注意，在 Debian 和 Ubuntu 上，Docker 服务被配置为默认启动。要在其他发行版的引导中自动启动 Docker 和 Containerd，请使用以下命令:</description>
    </item>
    
    <item>
      <title>Ubuntu22.04安装后配置</title>
      <link>https://keae12315.github.io/blog/post/ubuntu%E5%AE%89%E8%A3%85%E5%90%8E%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Fri, 05 Aug 2022 03:19:27 +0800</pubDate>
      
      <guid>https://keae12315.github.io/blog/post/ubuntu%E5%AE%89%E8%A3%85%E5%90%8E%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE/</guid>
      <description>查看系统版本 # 操作系统内核信息 uname －a # 操作系统版本信息 cat /proc/version # 操作系统发行版信息 cat /etc/issue # cpu相关信息 cat /proc/cpuinfo # 版本多少位 getconf LONG_BIT lsb_release -a 设置Git 本地Git用户邮箱设置 # 查看git配置信息 git config --list # 查看用户名 git config user.name # 查看邮箱 git config user.email # 设置全局用户名 git config --global user.name &amp;quot;&amp;quot; # 设置全局邮箱 git config --global user.email &amp;quot;&amp;quot; 生成SSH key ssh-keygen -t ed25519 -C &amp;quot;&amp;quot; 一路回车, 默认生成到~/.ssh目录下.
将后缀为.pub文件的内容添加到GitHub账户里.
换源 Ubuntu 的软件源配置文件是 /etc/apt/sources.list
备份配置文件
sudo cp /etc/apt/sources.</description>
    </item>
    
    <item>
      <title>WSL2使用v2ray代理</title>
      <link>https://keae12315.github.io/blog/post/wsl2%E4%BD%BF%E7%94%A8v2ray%E4%BB%A3%E7%90%86/</link>
      <pubDate>Thu, 04 Aug 2022 12:25:49 +0800</pubDate>
      
      <guid>https://keae12315.github.io/blog/post/wsl2%E4%BD%BF%E7%94%A8v2ray%E4%BB%A3%E7%90%86/</guid>
      <description>主机V2Ray设置 允许局域网连接 获取监听端口 对我而言, 有用的端口是局域网socks:10810
WSL2设置 配置环境变量 修改.bashrc文件, 添加以下内容(记得source .bashrc)
# v2ray proxy export windows_host=`cat /etc/resolv.conf|grep nameserver|awk &#39;{print $2}&#39;` export ALL_PROXY=socks5://$windows_host:10810 export HTTP_PROXY=$ALL_PROXY export http_proxy=$ALL_PROXY export HTTPS_PROXY=$ALL_PROXY export https_proxy=$ALL_PROXY 测试连接情况 curl -vv google.com  参考资料
WSL2中使用windows的代理
记录一次WSL2的网络代理配置
 </description>
    </item>
    
  </channel>
</rss>
