<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Python on KEAE的编程笔记</title><link>https://keae12315.github.io/blog/tags/python/</link><description>Recent content in Python on KEAE的编程笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 06 Aug 2022 11:50:16 +0800</lastBuildDate><atom:link href="https://keae12315.github.io/blog/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>可变与不可变究竟在说什么</title><link>https://keae12315.github.io/blog/post/%E5%8F%AF%E5%8F%98%E4%B8%8E%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%A9%B6%E7%AB%9F%E5%9C%A8%E8%AF%B4%E4%BB%80%E4%B9%88/</link><pubDate>Sat, 06 Aug 2022 11:50:16 +0800</pubDate><guid>https://keae12315.github.io/blog/post/%E5%8F%AF%E5%8F%98%E4%B8%8E%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%A9%B6%E7%AB%9F%E5%9C%A8%E8%AF%B4%E4%BB%80%E4%B9%88/</guid><description>Python中的数据类型 Numbers String List Tuple Set Dictionary python中不可变数据类型的定义为: 当该数据类型的对应变量的值发生了改变, 那么它对应的内存地址也会发生改变. 也就是说, 直接修改内存中的值, 并没有开辟新的内存. 反之就为可变类型.
不可变数据类型: numbers, string, tuple
可变数据类型: list, set, dictionary
对变量进行分析 id(): 获取对象的内存地址.
type(): 当只有一个参数的时候, 返回对象的类型. 当有三个参数的时候返回一个类对象.
==: 值比较.
is: 比较两个对象的物理id, 相当于 id(a)==id(b).
其它需要注意的 Python出于对性能的考虑, 但凡是不可变对象, 在同一个代码块中的对象, 只要是值相同的对象, 就不会重复创建, 而是直接引用已经存在的对象.
Integer object pool: This pool holds numbers of PyIntObjects which has been allocated already but not initialized (no valid value or type). Even though there is only one integer object pool.</description></item></channel></rss>